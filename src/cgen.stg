sequence(e) ::= "<e; separator=\"\n\">"
sequenceSpaced(e) ::= "<e; separator=\"\n\n\">"

program(data, globals, tags, strConst, intConst, boolConst, classNameTab, classObjTab, defaultProtObj, userDefiniedProtObj, dispTabs, heapStart, inits, methodCodeGenSt) ::= <<
    .data
<globals>
<tags>
<strConst>
<intConst>
<boolConst>
<classNameTab>
<classObjTab>

<defaultProtObj>
<userDefiniedProtObj>
<dispTabs>

<data>
    .globl  heap_start
<heapStart>
<inits>
<methodCodeGenSt>
>>

strConst(val, size, intConst, id, tag) ::= <<
str_const<id>:
    .word   <tag>
    .word   <size>
    .word   String_dispTab
    .word   <intConst>
    .asciiz "<val>"
    .align  2
>>


intConst(val, id, tag) ::= <<
int_const<id>:
    .word   <tag>
    .word   4
    .word   Int_dispTab
    .word   <val>
>>

protObj(name, len, attributes, id) ::= <<
<name>_protObj:
    .word   <id>
    .word   <len>
    .word   <name>_dispTab
    .word   <attributes>
>>

methodGen(className, methodName, e, paramsClear) ::= <<
<className>.<methodName>:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
<e>
    lw      $fp 12($sp)
    lw      $s0 8($sp)
    lw      $ra 4($sp)
    addiu   $sp $sp 12
<paramsClear>
    jr      $ra
>>